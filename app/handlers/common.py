from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! –Ø ‚Äî dls_bot ü§ñ\n\n"
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
        "‚Ä¢ –ü–µ—Ä–µ–Ω–æ—Å–∏—Ç—å —Å—Ç–∏–ª—å —Å –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–æ–µ (–∞–ª–≥–æ—Ä–∏—Ç–º –ì–∞—Ç–∏—Å–∞) ‚Äî –∫–æ–º–∞–Ω–¥–∞ /nst\n"
        "‚Ä¢ –°—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ –ø–æ–¥ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏(CycleGAN) ‚Äî –∫–æ–º–∞–Ω–¥–∞ /cyclegan\n\n"
        "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ /help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n"
        '‚Ä¢ /cancel ‚Äî –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é (–∏–ª–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞")\n\n'
        "–ï—Å–ª–∏ —è –Ω–µ –ø–æ–π–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á—É —Ç–µ–±–µ —Ç–µ–º –∂–µ (echo-—Ä–µ–∂–∏–º).\n"
    )


@router.message(Command("help"))
async def cmd_help(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "–≠—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–ø—Ä–∞–≤–∫–∏.\n\n"
        "‚Ä¢ /start - –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥\n"
        "‚Ä¢ /help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
        "‚Ä¢ /nst - –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å Neural Style Transfer(–º–µ–¥–ª–µ–Ω–Ω—ã–π, –Ω–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º)\n"
        "‚Ä¢ /cyclegan - –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å CycleGAN (–±—ã—Å—Ç—Ä–æ, –Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Å—Ç–∏–ª—è–º)\n"
        "‚Ä¢ /cancel - –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–≥—Ä—É–∑–∫—É –∫–∞—Ä—Ç–∏–Ω–æ–∫ –¥–ª—è /nst –∏–ª–∏\n"
        "  /cyclegan)\n"
        "‚Ä¢ –õ—é–±–æ–µ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä–µ–Ω–æ (echo-—Ä–µ–∂–∏–º).\n"
    )


@router.message(Command("cancel"))
async def cmd_cancel(message: Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        await message.answer("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–º–µ–Ω—ã.")
        return

    await state.clear()
    await message.answer("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")


@router.message(F.text)
async def echo_handler(message: Message):
    if message.text:
        try:
            await message.answer(f"echo: {message.text}")
        except Exception as e:
            print(f"Error sending echo: {e}")
            await message.answer("–ù–µ –º–æ–≥—É –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
